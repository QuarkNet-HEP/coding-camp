{"cells":[{"cell_type":"markdown","metadata":{"id":"52f2j4_f1dFr"},"source":["# Step 1\n","Conduct an activity you might perform with students: flip a coin 10 times, record the number of heads, then make a histogram (or bar chart) showing the number of heads and tails.\n","- Write out what a set of data might look like.  \n","- Sketch a histogram of what that data might look like. \n","- Write a list of steps a computer program might need to perform to simulate the investigation. This is called 'pseudocode'.   \n","\n","# Step 2\n","Run the code below. \n","\n","Next, try editing it to more closely match the activity described in step 1 except with a change of collecting 80 data points instead of 10. How does that change your histogram, if at all? \n","(if you don't want to print out the entire 80 flips, you can add a # in front of that command)\n","\n","# Step 3\n","How does your pseudocode compare with the Python code? "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"hsGWCS1A0zq7"},"outputs":[],"source":["# imports some software packages we'll use\n","import numpy as np\n","import matplotlib.pyplot as plt\n"]},{"cell_type":"markdown","metadata":{"id":"kVbi8iHyRGB8"},"source":["We're going to use a function called randint. It may work a little differently than it appears. You can read about how it works at : https://numpy.org/doc/stable/reference/random/generated/numpy.random.randint.html"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"pNym1yzm8ZX_"},"outputs":[],"source":["# Does this model random coin flips? What could you do to improve the model to complete Step 2?\n","flips = np.random.randint(low=0, high=6, size=25)\n","print(flips)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"iUTCIChc-5e_"},"outputs":[],"source":["# create a histogram\n","plt.hist(flips, bins = [0,1,2,3,4,5,6], color='lightblue', edgecolor = 'black');"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"yazKKE36RgzZ"},"outputs":[],"source":["# re-center the histogram bins \n","bin_list = [0,1,2,3,4,5,6]\n","plt.hist(flips, bins = np.subtract(bin_list,0.5), color='lightblue', edgecolor = 'black' );"]},{"cell_type":"markdown","metadata":{"id":"iaucazoPNHp3"},"source":["# Step 4: Main Task\n","Now that you know how to generate random numbers and create histograms, use these new skills to simulate the behavior of ***dice***. \n","\n","Model what will happen if a person throws a pair of dice many times by copying your code from above into the cell below and edit as needed."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"wb-CjyqhAZK-"},"outputs":[],"source":["# Use this block to write your new code for the dice."]},{"cell_type":"markdown","metadata":{"id":"34eidC8L3g5Q"},"source":["# Step 5: Coin Flip Extension Tasks\n"," - How would you look at flipping a coin 10 times for 8 trials and how would you create a histogram for the number of heads in each trial? Would this look any different from the 80 total coin flips?\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"NGoh8Wrt4NN7"},"outputs":[],"source":["#Hint1 for Coin Flip Extension Tasks\n","flips1 = np.random.randint(low=0, high=6, size=25)\n","flips2 = np.random.randint(low=0, high=6, size=25)\n","flips3 = np.random.randint(low=0, high=6, size=25)\n","flips1, flips2, flips3\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"vUXBjbGM4e0S"},"outputs":[],"source":["#Hint2 for Coin Flip Extension Tasks\n","count_flips1 = np.bincount(flips1)\n","print('Total occurences of \"1\" in trial 1: ', count_flips1[1])\n","\n","count_flips2 = np.bincount(flips2)\n","print('Total occurences of \"1\" in trial 2: ', count_flips2[1])\n","\n","a = [count_flips1[1], count_flips2[1]]\n","print (a)"]},{"cell_type":"markdown","metadata":{"id":"z_B7KCSh_ZWd"},"source":["# Step 6: Dice Extension Tasks  \n","Try modifying your code for these new scenarios:  \n","- What happens to the shape of the histogram if you increase the number of throws to a very large number (perhaps one million throws)?\n","- Rather than a pair of 6-sided dice (d6), instead simulate rolling a pair of **10-sided** (d10) dice!\n","- How does the appearance of the histogram change if a person rolls **three** dice at once rather than two? What about **four** dice?\n","- Pretend that one of the dice is damaged, and produces the number 5 slightly more often than the other numbers. How will the histogram shape change?"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"YIXQ8ghfAkY3"},"outputs":[],"source":["# Use this block for the step 6 extension tasks."]},{"cell_type":"markdown","metadata":{"id":"KADJDnkeWx0g"},"source":["---  \n","## Saving Your Work  \n","This is running on a Google server on a distant planet and deletes what you've done when you close this tab. To save your work for later use or analysis you have a few options:  \n","- File > \"Save a copy in Drive\" will save it to you Google Drive in a folder called \"Colaboratory\". You can run it later from there.  \n","- File > \"Download .ipynb\" to save to your computer (and run with Jupyter software later)  \n","- File > Print to ... um ... print or save as a pdf.  \n","- To save an image of a graph or chart, right-click on it and select Save Image as ...  \n","\n","## Credits\n","This notebook was designed by [Quarknet](https://quarknet.org/) Teacher Fellows Joy Scales, Chris DiMenna, and Jodi Hansen, Tiffany Coke, Gerry Gagnon, Peter Apps, Jeremy Smith, and Adam LaMee. Thanks to the great folks at [Binder](https://mybinder.org/) and [Google Colaboratory](https://colab.research.google.com/notebooks/intro.ipynb) for making this notebook interactive without you needing to download it or install [Jupyter](https://jupyter.org/) on your own device.  "]}],"metadata":{"colab":{"collapsed_sections":[],"provenance":[{"file_id":"https://github.com/QuarkNet-HEP/coding-camp/blob/master/probability.ipynb","timestamp":1664658152976}]},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.7"}},"nbformat":4,"nbformat_minor":0}